<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN"
"http://www.springframework.org/dtd/spring-beans-2.0.dtd">
<beans>
	<!-- 定义国际化消息 -->

	
	<!--  配置数据源 -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName">
			<value>com.mysql.jdbc.Driver</value>
		</property>
		<property name="url">
			<value>jdbc:mysql://localhost:3306/test</value>
		</property>
		<property name="username">
			<value>root</value>
		</property>
		<property name="password">
			<value>1123581321</value>
		</property>
	</bean>	
	<!-- 配置Hibernate -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
		<property name="mappingResources">
			<list>
				<value>com/base/hibernate/beans/User.hbm.xml</value>
				<value>com/base/hibernate/beans/Login.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>
	<!-- 配置事务 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>	
	<!-- 定义DAO -->
	<bean id="userDAO" class="com.base.hibernate.dao.UserDAO">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>
	
	<bean id="loginDAO" class="com.base.hibernate.dao.LoginDAO">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>		
	
	<!-- 定义DAO代理 -->
	<bean id="UserDAOProxy"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager">
			<ref bean="transactionManager" />
		</property>
		<property name="target">
			<ref local="userDAO" />
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="insert*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>
	<bean id="LoginDAOProxy"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager">
			<ref bean="transactionManager" />
		</property>
		<property name="target">
			<ref local="loginDAO" />
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="insert*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>
	<!-- 定义视图 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass">
			<value>
				org.springframework.web.servlet.view.InternalResourceView
			</value>
		</property>
		<!-- JSP都放在/目录下 -->
		<property name="prefix">
			<value>/</value>
		</property>
		<!-- JSP页面的后缀都四.JSP -->
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>	
	<!-- 定义映射 -->
	<bean id="CaptchaInter" class="com.base.interceptor.CaptchaInter"></bean>
	<bean id="loginMapping"
		class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<property name="mappings">
			<props>
				<prop key="/login.do">LoginAction</prop>
				<prop key="/welcome.do">WelAction</prop>
			</props>
		</property>
		<property name="interceptors">
			<list>
				<ref bean="CaptchaInter"></ref>
			</list>
		</property>
	</bean>	

			
	<!---定义Action-->

	<bean id="LoginAction"
			class="com.base.spring.actions.LoginAction">
			<property name="commandClass">
				<value>com.base.spring.forms.LoginForm</value>
			</property>
			<!-- 指定DAO类 -->
			<property name="loginDAO">
			<ref local="loginDAO" />
			</property>
			<!-- 指定验证类 -->

			<!-- 指定失败要返回的页面 -->
			<property name="formView">
				<value>login</value>    
			</property>
			<!-- 指定成功要返回的页面 -->
			<property name="successView">
				<value>welcome</value>
			</property>
	</bean>
	<bean id="WelAction"
			class="com.base.spring.actions.WelAction">
			<property name="commandClass">
				<value>com.base.spring.forms.LoginForm</value>
			</property>
			<!-- 指定DAO类 -->

			<!-- 指定验证类 -->

			<!-- 指定失败要返回的页面 -->
			<property name="formView">
				<value>login</value>    
			</property>
			<!-- 指定成功要返回的页面 -->
			<property name="successView">
				<value>welcome</value>
			</property>
	</bean>
	
	
	<!-- 定义验证类 -->











<!--验证码  -->
<!-- <mvc:interceptors>  
    使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求  
    <bean class="com.base.interceptor"/>  
    <mvc:interceptor>  
        <mvc:mapping path="/welcome.do"/>  
        定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的  
        <bean class="com.base.interceptor"/>  
    </mvc:interceptor>  
</mvc:interceptors>  -->
<!-- <bean id="CaptchaInterceptor"
class="com.base.interceptor.CaptchaInter"/>
 
<bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping">
    <property name="interceptors">
        <list>
           <ref bean="CaptchaInterceptor"/>
        </list>
    </property>
</bean> -->
</beans>
